package bean;

import java.math.BigDecimal;
import java.sql.Connection;
import java.sql.Date;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import com.fasterxml.jackson.annotation.JsonFormat;

import dao.ConnectDataBase;
import utils.DBUtils;

/**
 * HocVien generated by hbm2java
 */
public class HocVien implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private String maHocVien;
	private String tenHocVien;
	@JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "dd-MM-yyyy", timezone = "GMT+7")
	private Date ngaySinh;
	private String sdt;
	private String email;
	private String image;

	public HocVien() {
	}

	public HocVien(String maHocVien) {
		this.maHocVien = maHocVien;
	}

	public String autoID(Connection conn) throws SQLException
	{
		String sql = "SELECT COUNT(*) as SoLuong FROM HocVien";
		
		PreparedStatement pstm=null;
		try {
			pstm = conn.prepareStatement(sql);
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
        ResultSet rs = pstm.executeQuery();
        String kqString="";
        while (rs.next()) 
        {
        	int soluong = rs.getInt("SoLuong");
        	if (soluong+1<10)
        		kqString= "HV000"+ String.valueOf(soluong+1);
        	else {
				kqString= "HV00"+ String.valueOf(soluong+1);
			}
        }
        return kqString;  
	}
	
	
	
	public HocVien(String maHocVien, String tenHocVien, Date ngaySinh, String sdt, String email, String image) {
		super();
		this.maHocVien = maHocVien;
		this.tenHocVien = tenHocVien;
		this.ngaySinh = ngaySinh;
		this.sdt = sdt;
		this.email = email;
		this.image = image;
	}

	public HocVien(String maHocVien, String tenHocVien, Date ngaySinh, String sdt, String email) {
		this.maHocVien = maHocVien;
		this.tenHocVien = tenHocVien;
		this.ngaySinh = ngaySinh;
		this.sdt = sdt;
		this.email = email;
	}
	
	public HocVien(String tenHocVien, Date ngaySinh, String sdt, String email) {
		this.tenHocVien = tenHocVien;
		this.ngaySinh = ngaySinh;
		this.sdt = sdt;
		this.email = email;
	}
	
	public HocVien(Connection conn,String tenHocVien, Date ngaySinh, String sdt, String email) throws SQLException {
		this.maHocVien=autoID(conn);
		this.tenHocVien = tenHocVien;
		this.ngaySinh = ngaySinh;
		this.sdt = sdt;
		this.email = email;
	}

	public String getMaHocVien() {
		return this.maHocVien;
	}

	public void setMaHocVien(String maHocVien) {
		this.maHocVien = maHocVien;
	}

	public String getTenHocVien() {
		return this.tenHocVien;
	}

	public void setTenHocVien(String tenHocVien) {
		this.tenHocVien = tenHocVien;
	}

	public Date getNgaySinh() {
		return this.ngaySinh;
	}

	public void setNgaySinh(Date ngaySinh) {
		this.ngaySinh = ngaySinh;
	}

	public String getSdt() {
		return this.sdt;
	}

	public void setSdt(String sdt) {
		this.sdt = sdt;
	}

	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}
	
	/**
	 * @return the image
	 */
	public String getImage() {
		return image;
	}

	/**
	 * @param image the image to set
	 */
	public void setImage(String image) {
		this.image = image;
	}

	public int LaySoDuVi(Connection conn)
	{	
		int SoDu=0;
		
		try
		{
			SoDu = DBUtils.LaySoDu(conn,maHocVien).intValue();
		} catch (SQLException e)
		{
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return SoDu;
	}
	
	public void ThanhToan(Connection conn, int sotien, String maHoaDon) throws SQLException 
	{
		int newSodu= LaySoDuVi(conn) - sotien;
        String sql = "Update ViThanhToan set SoDu=?, NgayCapNhat=GETDATE() where MaHocVien=?";
        PreparedStatement pstm = conn.prepareStatement(sql);
        pstm.setBigDecimal(1, BigDecimal.valueOf(newSodu));
        pstm.setString(2, maHocVien);
        pstm.executeUpdate();
        ViThanhToan viThanhToan= new ViThanhToan(conn, maHocVien);
        viThanhToan.PhatSinhGiaoDich(conn, maHoaDon, sotien);
    }
	
	public List<KhoaHoc> DanhSachDangKy(Connection conn) throws SQLException
	 {
		
		String sql = "select MaKhoaHoc from DangKyKhoaHoc where MaHocVien=?";
	    PreparedStatement pstm = conn.prepareStatement(sql);
	    pstm.setString(1, this.maHocVien);
        ResultSet rs = pstm.executeQuery();
        String maKhoaHocString =""; 
        List<KhoaHoc> bHocs=new ArrayList<KhoaHoc>();
        while (rs.next()) 
        {
    	   maKhoaHocString=rs.getString("MaKhoaHoc");
    	   KhoaHoc mh = new KhoaHoc(maKhoaHocString); 
	       bHocs.add(mh);
        }
        
       return bHocs;
       
	 }

	@Override
	public String toString() {
		return "HocVien [maHocVien=" + maHocVien + ", tenHocVien=" + tenHocVien + ", ngaySinh=" + ngaySinh + ", sdt="
				+ sdt + ", email=" + email + ", image=" + image + "]";
	}

}

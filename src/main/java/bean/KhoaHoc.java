package bean;
// Generated Dec 3, 2022, 12:48:29 PM by Hibernate Tools 6.0.2.Final

import java.io.Serializable;
import java.math.BigDecimal;
import java.sql.Connection;
import java.sql.Date;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

import com.fasterxml.jackson.annotation.JsonFormat;

import dao.ConnectDataBase;
import utils.*;

/**
 * KhoaHoc generated by hbm2java
 */
public class KhoaHoc implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private String maKhoaHoc;
	private String giaoVien;
	private String phanMon;
	private String tenKhoaHoc;
	private String moTa;
	private Integer soBaiHoc;
	private Integer giaTien;
	@JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "dd-MM-yyyy", timezone = "GMT+7")
	private Date ngayCapNhat;
	private String hinhAnhMoTa;
	
	public KhoaHoc() {
	}
	
	public KhoaHoc(String maKhoaHoc, String giaoVien, String phanMon, String tenKhoaHoc, String moTa,
			Integer soBaiHoc, Integer giaTien, Date ngayCapNhat, String hinhAnhMoTa)
	{
		this.maKhoaHoc = maKhoaHoc;
		this.giaoVien = giaoVien;
		this.phanMon = phanMon;
		this.tenKhoaHoc = tenKhoaHoc;
		this.moTa = moTa;
		this.soBaiHoc = soBaiHoc;
		this.giaTien = giaTien;
		this.ngayCapNhat = ngayCapNhat;
		this.hinhAnhMoTa = hinhAnhMoTa;
		
	}

	public String getMaKhoaHoc() {
		return this.maKhoaHoc;
	}

	public void setMaKhoaHoc(String maKhoaHoc) {
		this.maKhoaHoc = maKhoaHoc;
	}

	public String getGiaoVien() {
		return this.giaoVien;
	}

	public void setGiaoVien(String giaoVien) {
		this.giaoVien = giaoVien;
	}

	public String getPhanMon() {
		return this.phanMon;
	}

	public void setPhanMon(String phanMon) {
		this.phanMon = phanMon;
	}

	public String getTenKhoaHoc() {
		return this.tenKhoaHoc;
	}

	public void setTenKhoaHoc(String tenKhoaHoc) {
		this.tenKhoaHoc = tenKhoaHoc;
	}

	public String getMoTa() {
		return this.moTa;
	}

	public void setMoTa(String moTa) {
		this.moTa = moTa;
	}

	public Integer getSoBaiHoc() {
		return this.soBaiHoc;
	}

	public void setSoBaiHoc(Integer soBaiHoc) {
		this.soBaiHoc = soBaiHoc;
	}

	public Integer getGiaTien() {
		return this.giaTien;
	}

	public void setGiaTien(Integer giaTien) {
		this.giaTien = giaTien;
	}

	public Date getNgayCapNhat() {
		return this.ngayCapNhat;
	}

	public void setNgayCapNhat(Date ngayCapNhat) {
		this.ngayCapNhat = ngayCapNhat;
	}

	public String getHinhAnhMoTa() {
		return this.hinhAnhMoTa;
	}

	public void setHinhAnhMoTa(String hinhAnhMoTa) {
		this.hinhAnhMoTa = hinhAnhMoTa;
	}
	
	public KhoaHoc getInfor(String maKhoaHoc)
	{
		Connection conn = null;
		try {
			conn = ConnectDataBase.getConnection();
		} catch (ClassNotFoundException e1) {
			// TODO Auto-generated catch block
			e1.printStackTrace();
		} catch (SQLException e1) {
			// TODO Auto-generated catch block
			e1.printStackTrace();
		}
		
		KhoaHoc khoaHoc= null;
		
		try
		{
			khoaHoc = DBUtils.LayChiTietKhoaHoc(conn,maKhoaHoc);
		} catch (SQLException e)
		{
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return khoaHoc;
	}
	
	private String autoId(String maPhanMon) throws SQLException
	{
		Connection conn = null;
		try {
			conn = ConnectDataBase.getConnection();
		} catch (ClassNotFoundException e1) {
			// TODO Auto-generated catch block
			e1.printStackTrace();
		} catch (SQLException e1) {
			// TODO Auto-generated catch block
			e1.printStackTrace();
		}
		
		String subString= maPhanMon.substring(0,2);
		
		String sql = "SELECT * FROM KhoaHoc where MaKhoaHoc like ?";
		
		PreparedStatement pstm=null;
		try {
			pstm = conn.prepareStatement(sql);
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		pstm.setString(1, maPhanMon+"%");
        ResultSet rs = pstm.executeQuery();
        String kqString="";
        while (rs.next()) 
        {
        	kqString= rs.getString("MaKhoaHoc");
        }
        
        int soluong = Integer.parseInt(kqString.substring(3));
    	if (soluong+1<10)
    		kqString= subString+ "0" + String.valueOf(soluong+1);
    	else {
			kqString= subString + String.valueOf(soluong+1);
		}
        return kqString;  
	}
	
	public KhoaHoc(String maKhoaHoc)
	{
		KhoaHoc nayHoc= new KhoaHoc();
		nayHoc=getInfor(maKhoaHoc);
		this.maKhoaHoc = nayHoc.maKhoaHoc;
		this.giaoVien = nayHoc.giaoVien;
		this.phanMon = nayHoc.phanMon;
		this.tenKhoaHoc = nayHoc.tenKhoaHoc;
		this.moTa = nayHoc.moTa;
		this.soBaiHoc = nayHoc.soBaiHoc;
		this.giaTien = nayHoc.giaTien;
		this.ngayCapNhat = nayHoc.ngayCapNhat;
		this.hinhAnhMoTa = nayHoc.hinhAnhMoTa;
		
	}


}
